// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0-devel
// 	protoc        v3.11.2
// source: contextlogic/hello_service/v1alpha1/greeter.proto

package v1alpha1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Greet_Message_Language int32

const (
	Greet_Message_UNKNOW_LANGUAGE_TYPE Greet_Message_Language = 0
	Greet_Message_ENGLISH              Greet_Message_Language = 1
	Greet_Message_CHINESE              Greet_Message_Language = 2
	Greet_Message_FRENCH               Greet_Message_Language = 3
)

// Enum value maps for Greet_Message_Language.
var (
	Greet_Message_Language_name = map[int32]string{
		0: "UNKNOW_LANGUAGE_TYPE",
		1: "ENGLISH",
		2: "CHINESE",
		3: "FRENCH",
	}
	Greet_Message_Language_value = map[string]int32{
		"UNKNOW_LANGUAGE_TYPE": 0,
		"ENGLISH":              1,
		"CHINESE":              2,
		"FRENCH":               3,
	}
)

func (x Greet_Message_Language) Enum() *Greet_Message_Language {
	p := new(Greet_Message_Language)
	*p = x
	return p
}

func (x Greet_Message_Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Greet_Message_Language) Descriptor() protoreflect.EnumDescriptor {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_enumTypes[0].Descriptor()
}

func (Greet_Message_Language) Type() protoreflect.EnumType {
	return &file_contextlogic_hello_service_v1alpha1_greeter_proto_enumTypes[0]
}

func (x Greet_Message_Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Greet_Message_Language.Descriptor instead.
func (Greet_Message_Language) EnumDescriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{0, 0, 0}
}

type Greet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	GreetMessage *Greet_Message       `protobuf:"bytes,2,opt,name=greetMessage,proto3" json:"greetMessage,omitempty"`
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Greet) Reset() {
	*x = Greet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Greet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Greet) ProtoMessage() {}

func (x *Greet) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Greet.ProtoReflect.Descriptor instead.
func (*Greet) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{0}
}

func (x *Greet) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Greet) GetGreetMessage() *Greet_Message {
	if x != nil {
		return x.GreetMessage
	}
	return nil
}

func (x *Greet) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Greet) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Greets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Greets []*Greet `protobuf:"bytes,1,rep,name=greets,proto3" json:"greets,omitempty"`
}

func (x *Greets) Reset() {
	*x = Greets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Greets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Greets) ProtoMessage() {}

func (x *Greets) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Greets.ProtoReflect.Descriptor instead.
func (*Greets) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{1}
}

func (x *Greets) GetGreets() []*Greet {
	if x != nil {
		return x.Greets
	}
	return nil
}

type CreateGreetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Greet *Greet `protobuf:"bytes,1,opt,name=greet,proto3" json:"greet,omitempty"`
}

func (x *CreateGreetRequest) Reset() {
	*x = CreateGreetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGreetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGreetRequest) ProtoMessage() {}

func (x *CreateGreetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGreetRequest.ProtoReflect.Descriptor instead.
func (*CreateGreetRequest) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{2}
}

func (x *CreateGreetRequest) GetGreet() *Greet {
	if x != nil {
		return x.Greet
	}
	return nil
}

type CreateGreetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GreetID int64 `protobuf:"varint,1,opt,name=greetID,proto3" json:"greetID,omitempty"`
}

func (x *CreateGreetResponse) Reset() {
	*x = CreateGreetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateGreetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGreetResponse) ProtoMessage() {}

func (x *CreateGreetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGreetResponse.ProtoReflect.Descriptor instead.
func (*CreateGreetResponse) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{3}
}

func (x *CreateGreetResponse) GetGreetID() int64 {
	if x != nil {
		return x.GreetID
	}
	return 0
}

type ReadAllGreetsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReadAllGreetsRequest) Reset() {
	*x = ReadAllGreetsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllGreetsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllGreetsRequest) ProtoMessage() {}

func (x *ReadAllGreetsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllGreetsRequest.ProtoReflect.Descriptor instead.
func (*ReadAllGreetsRequest) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{4}
}

type ReadAllGreetsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Greets *Greets `protobuf:"bytes,1,opt,name=greets,proto3" json:"greets,omitempty"`
}

func (x *ReadAllGreetsResponse) Reset() {
	*x = ReadAllGreetsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllGreetsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllGreetsResponse) ProtoMessage() {}

func (x *ReadAllGreetsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllGreetsResponse.ProtoReflect.Descriptor instead.
func (*ReadAllGreetsResponse) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{5}
}

func (x *ReadAllGreetsResponse) GetGreets() *Greets {
	if x != nil {
		return x.Greets
	}
	return nil
}

type ReadGreetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GreetID int64 `protobuf:"varint,1,opt,name=greetID,proto3" json:"greetID,omitempty"`
}

func (x *ReadGreetRequest) Reset() {
	*x = ReadGreetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadGreetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadGreetRequest) ProtoMessage() {}

func (x *ReadGreetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadGreetRequest.ProtoReflect.Descriptor instead.
func (*ReadGreetRequest) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{6}
}

func (x *ReadGreetRequest) GetGreetID() int64 {
	if x != nil {
		return x.GreetID
	}
	return 0
}

type ReadGreetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Greet *Greet `protobuf:"bytes,1,opt,name=greet,proto3" json:"greet,omitempty"`
}

func (x *ReadGreetResponse) Reset() {
	*x = ReadGreetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadGreetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadGreetResponse) ProtoMessage() {}

func (x *ReadGreetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadGreetResponse.ProtoReflect.Descriptor instead.
func (*ReadGreetResponse) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{7}
}

func (x *ReadGreetResponse) GetGreet() *Greet {
	if x != nil {
		return x.Greet
	}
	return nil
}

type UpdateGreetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GreetID int64  `protobuf:"varint,1,opt,name=greetID,proto3" json:"greetID,omitempty"`
	Greet   *Greet `protobuf:"bytes,2,opt,name=greet,proto3" json:"greet,omitempty"`
}

func (x *UpdateGreetRequest) Reset() {
	*x = UpdateGreetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGreetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGreetRequest) ProtoMessage() {}

func (x *UpdateGreetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGreetRequest.ProtoReflect.Descriptor instead.
func (*UpdateGreetRequest) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateGreetRequest) GetGreetID() int64 {
	if x != nil {
		return x.GreetID
	}
	return 0
}

func (x *UpdateGreetRequest) GetGreet() *Greet {
	if x != nil {
		return x.Greet
	}
	return nil
}

type UpdateGreetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GreetID int64 `protobuf:"varint,1,opt,name=greetID,proto3" json:"greetID,omitempty"`
}

func (x *UpdateGreetResponse) Reset() {
	*x = UpdateGreetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGreetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGreetResponse) ProtoMessage() {}

func (x *UpdateGreetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGreetResponse.ProtoReflect.Descriptor instead.
func (*UpdateGreetResponse) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateGreetResponse) GetGreetID() int64 {
	if x != nil {
		return x.GreetID
	}
	return 0
}

type DeleteGreetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GreetID int64 `protobuf:"varint,1,opt,name=greetID,proto3" json:"greetID,omitempty"`
}

func (x *DeleteGreetRequest) Reset() {
	*x = DeleteGreetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGreetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreetRequest) ProtoMessage() {}

func (x *DeleteGreetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreetRequest.ProtoReflect.Descriptor instead.
func (*DeleteGreetRequest) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteGreetRequest) GetGreetID() int64 {
	if x != nil {
		return x.GreetID
	}
	return 0
}

type DeleteGreetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GreetID int64 `protobuf:"varint,1,opt,name=greetID,proto3" json:"greetID,omitempty"`
}

func (x *DeleteGreetResponse) Reset() {
	*x = DeleteGreetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGreetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGreetResponse) ProtoMessage() {}

func (x *DeleteGreetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGreetResponse.ProtoReflect.Descriptor instead.
func (*DeleteGreetResponse) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteGreetResponse) GetGreetID() int64 {
	if x != nil {
		return x.GreetID
	}
	return 0
}

type Greet_Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Language Greet_Message_Language `protobuf:"varint,2,opt,name=language,proto3,enum=contextlogic.hello_service.v1alpha1.Greet_Message_Language" json:"language,omitempty"`
}

func (x *Greet_Message) Reset() {
	*x = Greet_Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Greet_Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Greet_Message) ProtoMessage() {}

func (x *Greet_Message) ProtoReflect() protoreflect.Message {
	mi := &file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Greet_Message.ProtoReflect.Descriptor instead.
func (*Greet_Message) Descriptor() ([]byte, []int) {
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Greet_Message) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Greet_Message) GetLanguage() Greet_Message_Language {
	if x != nil {
		return x.Language
	}
	return Greet_Message_UNKNOW_LANGUAGE_TYPE
}

var File_contextlogic_hello_service_v1alpha1_greeter_proto protoreflect.FileDescriptor

var file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDesc = []byte{
	0x0a, 0x31, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x72, 0x65, 0x65, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x23, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x03, 0x0a, 0x05, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x56, 0x0a, 0x0c, 0x67, 0x72, 0x65, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x67, 0x72, 0x65,
	0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a,
	0xc0, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x57, 0x0a,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3b, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x5f, 0x4c, 0x41, 0x4e,
	0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x45, 0x4e, 0x47, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x48, 0x49,
	0x4e, 0x45, 0x53, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x52, 0x45, 0x4e, 0x43, 0x48,
	0x10, 0x03, 0x22, 0x4c, 0x0a, 0x06, 0x47, 0x72, 0x65, 0x65, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x06,
	0x67, 0x72, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c,
	0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x06, 0x67, 0x72, 0x65, 0x65, 0x74, 0x73,
	0x22, 0x56, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x61,
	0x64, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x5c, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x65, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x06, 0x67, 0x72,
	0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x73, 0x52, 0x06, 0x67, 0x72, 0x65, 0x65, 0x74, 0x73, 0x22,
	0x2c, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x22, 0x55, 0x0a,
	0x11, 0x52, 0x65, 0x61, 0x64, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63,
	0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x05, 0x67,
	0x72, 0x65, 0x65, 0x74, 0x22, 0x70, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x65, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x65,
	0x65, 0x74, 0x49, 0x44, 0x12, 0x40, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52,
	0x05, 0x67, 0x72, 0x65, 0x65, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x22, 0x2f, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x32, 0x9a, 0x06, 0x0a, 0x07, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x65, 0x72, 0x12, 0x97, 0x01, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22,
	0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x97,
	0x01, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x65, 0x65, 0x74, 0x73,
	0x12, 0x39, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x47, 0x72,
	0x65, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x47, 0x72, 0x65, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12,
	0x07, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x12, 0x95, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x61,
	0x64, 0x47, 0x72, 0x65, 0x65, 0x74, 0x12, 0x35, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x61,
	0x64, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x7b, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44, 0x7d,
	0x12, 0xa1, 0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74,
	0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x14, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x67, 0x72, 0x65, 0x65, 0x74, 0x49, 0x44,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x9e, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47,
	0x72, 0x65, 0x65, 0x74, 0x12, 0x37, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2e, 0x68, 0x65, 0x6c,
	0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x65, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x7b, 0x67, 0x72, 0x65,
	0x65, 0x74, 0x49, 0x44, 0x7d, 0x42, 0x25, 0x5a, 0x23, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x2f, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescOnce sync.Once
	file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescData = file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDesc
)

func file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescGZIP() []byte {
	file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescOnce.Do(func() {
		file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescData = protoimpl.X.CompressGZIP(file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescData)
	})
	return file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDescData
}

var file_contextlogic_hello_service_v1alpha1_greeter_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_contextlogic_hello_service_v1alpha1_greeter_proto_goTypes = []interface{}{
	(Greet_Message_Language)(0),   // 0: contextlogic.hello_service.v1alpha1.Greet.Message.Language
	(*Greet)(nil),                 // 1: contextlogic.hello_service.v1alpha1.Greet
	(*Greets)(nil),                // 2: contextlogic.hello_service.v1alpha1.Greets
	(*CreateGreetRequest)(nil),    // 3: contextlogic.hello_service.v1alpha1.CreateGreetRequest
	(*CreateGreetResponse)(nil),   // 4: contextlogic.hello_service.v1alpha1.CreateGreetResponse
	(*ReadAllGreetsRequest)(nil),  // 5: contextlogic.hello_service.v1alpha1.ReadAllGreetsRequest
	(*ReadAllGreetsResponse)(nil), // 6: contextlogic.hello_service.v1alpha1.ReadAllGreetsResponse
	(*ReadGreetRequest)(nil),      // 7: contextlogic.hello_service.v1alpha1.ReadGreetRequest
	(*ReadGreetResponse)(nil),     // 8: contextlogic.hello_service.v1alpha1.ReadGreetResponse
	(*UpdateGreetRequest)(nil),    // 9: contextlogic.hello_service.v1alpha1.UpdateGreetRequest
	(*UpdateGreetResponse)(nil),   // 10: contextlogic.hello_service.v1alpha1.UpdateGreetResponse
	(*DeleteGreetRequest)(nil),    // 11: contextlogic.hello_service.v1alpha1.DeleteGreetRequest
	(*DeleteGreetResponse)(nil),   // 12: contextlogic.hello_service.v1alpha1.DeleteGreetResponse
	(*Greet_Message)(nil),         // 13: contextlogic.hello_service.v1alpha1.Greet.Message
	(*timestamp.Timestamp)(nil),   // 14: google.protobuf.Timestamp
}
var file_contextlogic_hello_service_v1alpha1_greeter_proto_depIdxs = []int32{
	13, // 0: contextlogic.hello_service.v1alpha1.Greet.greetMessage:type_name -> contextlogic.hello_service.v1alpha1.Greet.Message
	14, // 1: contextlogic.hello_service.v1alpha1.Greet.created_at:type_name -> google.protobuf.Timestamp
	14, // 2: contextlogic.hello_service.v1alpha1.Greet.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 3: contextlogic.hello_service.v1alpha1.Greets.greets:type_name -> contextlogic.hello_service.v1alpha1.Greet
	1,  // 4: contextlogic.hello_service.v1alpha1.CreateGreetRequest.greet:type_name -> contextlogic.hello_service.v1alpha1.Greet
	2,  // 5: contextlogic.hello_service.v1alpha1.ReadAllGreetsResponse.greets:type_name -> contextlogic.hello_service.v1alpha1.Greets
	1,  // 6: contextlogic.hello_service.v1alpha1.ReadGreetResponse.greet:type_name -> contextlogic.hello_service.v1alpha1.Greet
	1,  // 7: contextlogic.hello_service.v1alpha1.UpdateGreetRequest.greet:type_name -> contextlogic.hello_service.v1alpha1.Greet
	0,  // 8: contextlogic.hello_service.v1alpha1.Greet.Message.language:type_name -> contextlogic.hello_service.v1alpha1.Greet.Message.Language
	3,  // 9: contextlogic.hello_service.v1alpha1.Greeter.CreateGreet:input_type -> contextlogic.hello_service.v1alpha1.CreateGreetRequest
	5,  // 10: contextlogic.hello_service.v1alpha1.Greeter.ReadAllGreets:input_type -> contextlogic.hello_service.v1alpha1.ReadAllGreetsRequest
	7,  // 11: contextlogic.hello_service.v1alpha1.Greeter.ReadGreet:input_type -> contextlogic.hello_service.v1alpha1.ReadGreetRequest
	9,  // 12: contextlogic.hello_service.v1alpha1.Greeter.UpdateGreet:input_type -> contextlogic.hello_service.v1alpha1.UpdateGreetRequest
	11, // 13: contextlogic.hello_service.v1alpha1.Greeter.DeleteGreet:input_type -> contextlogic.hello_service.v1alpha1.DeleteGreetRequest
	4,  // 14: contextlogic.hello_service.v1alpha1.Greeter.CreateGreet:output_type -> contextlogic.hello_service.v1alpha1.CreateGreetResponse
	6,  // 15: contextlogic.hello_service.v1alpha1.Greeter.ReadAllGreets:output_type -> contextlogic.hello_service.v1alpha1.ReadAllGreetsResponse
	8,  // 16: contextlogic.hello_service.v1alpha1.Greeter.ReadGreet:output_type -> contextlogic.hello_service.v1alpha1.ReadGreetResponse
	10, // 17: contextlogic.hello_service.v1alpha1.Greeter.UpdateGreet:output_type -> contextlogic.hello_service.v1alpha1.UpdateGreetResponse
	12, // 18: contextlogic.hello_service.v1alpha1.Greeter.DeleteGreet:output_type -> contextlogic.hello_service.v1alpha1.DeleteGreetResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_contextlogic_hello_service_v1alpha1_greeter_proto_init() }
func file_contextlogic_hello_service_v1alpha1_greeter_proto_init() {
	if File_contextlogic_hello_service_v1alpha1_greeter_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Greet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Greets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGreetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateGreetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllGreetsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllGreetsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadGreetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadGreetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGreetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGreetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGreetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGreetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Greet_Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contextlogic_hello_service_v1alpha1_greeter_proto_goTypes,
		DependencyIndexes: file_contextlogic_hello_service_v1alpha1_greeter_proto_depIdxs,
		EnumInfos:         file_contextlogic_hello_service_v1alpha1_greeter_proto_enumTypes,
		MessageInfos:      file_contextlogic_hello_service_v1alpha1_greeter_proto_msgTypes,
	}.Build()
	File_contextlogic_hello_service_v1alpha1_greeter_proto = out.File
	file_contextlogic_hello_service_v1alpha1_greeter_proto_rawDesc = nil
	file_contextlogic_hello_service_v1alpha1_greeter_proto_goTypes = nil
	file_contextlogic_hello_service_v1alpha1_greeter_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	CreateGreet(ctx context.Context, in *CreateGreetRequest, opts ...grpc.CallOption) (*CreateGreetResponse, error)
	ReadAllGreets(ctx context.Context, in *ReadAllGreetsRequest, opts ...grpc.CallOption) (*ReadAllGreetsResponse, error)
	ReadGreet(ctx context.Context, in *ReadGreetRequest, opts ...grpc.CallOption) (*ReadGreetResponse, error)
	UpdateGreet(ctx context.Context, in *UpdateGreetRequest, opts ...grpc.CallOption) (*UpdateGreetResponse, error)
	DeleteGreet(ctx context.Context, in *DeleteGreetRequest, opts ...grpc.CallOption) (*DeleteGreetResponse, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) CreateGreet(ctx context.Context, in *CreateGreetRequest, opts ...grpc.CallOption) (*CreateGreetResponse, error) {
	out := new(CreateGreetResponse)
	err := c.cc.Invoke(ctx, "/contextlogic.hello_service.v1alpha1.Greeter/CreateGreet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) ReadAllGreets(ctx context.Context, in *ReadAllGreetsRequest, opts ...grpc.CallOption) (*ReadAllGreetsResponse, error) {
	out := new(ReadAllGreetsResponse)
	err := c.cc.Invoke(ctx, "/contextlogic.hello_service.v1alpha1.Greeter/ReadAllGreets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) ReadGreet(ctx context.Context, in *ReadGreetRequest, opts ...grpc.CallOption) (*ReadGreetResponse, error) {
	out := new(ReadGreetResponse)
	err := c.cc.Invoke(ctx, "/contextlogic.hello_service.v1alpha1.Greeter/ReadGreet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) UpdateGreet(ctx context.Context, in *UpdateGreetRequest, opts ...grpc.CallOption) (*UpdateGreetResponse, error) {
	out := new(UpdateGreetResponse)
	err := c.cc.Invoke(ctx, "/contextlogic.hello_service.v1alpha1.Greeter/UpdateGreet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) DeleteGreet(ctx context.Context, in *DeleteGreetRequest, opts ...grpc.CallOption) (*DeleteGreetResponse, error) {
	out := new(DeleteGreetResponse)
	err := c.cc.Invoke(ctx, "/contextlogic.hello_service.v1alpha1.Greeter/DeleteGreet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	CreateGreet(context.Context, *CreateGreetRequest) (*CreateGreetResponse, error)
	ReadAllGreets(context.Context, *ReadAllGreetsRequest) (*ReadAllGreetsResponse, error)
	ReadGreet(context.Context, *ReadGreetRequest) (*ReadGreetResponse, error)
	UpdateGreet(context.Context, *UpdateGreetRequest) (*UpdateGreetResponse, error)
	DeleteGreet(context.Context, *DeleteGreetRequest) (*DeleteGreetResponse, error)
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) CreateGreet(context.Context, *CreateGreetRequest) (*CreateGreetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGreet not implemented")
}
func (*UnimplementedGreeterServer) ReadAllGreets(context.Context, *ReadAllGreetsRequest) (*ReadAllGreetsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllGreets not implemented")
}
func (*UnimplementedGreeterServer) ReadGreet(context.Context, *ReadGreetRequest) (*ReadGreetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadGreet not implemented")
}
func (*UnimplementedGreeterServer) UpdateGreet(context.Context, *UpdateGreetRequest) (*UpdateGreetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGreet not implemented")
}
func (*UnimplementedGreeterServer) DeleteGreet(context.Context, *DeleteGreetRequest) (*DeleteGreetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGreet not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_CreateGreet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).CreateGreet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contextlogic.hello_service.v1alpha1.Greeter/CreateGreet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).CreateGreet(ctx, req.(*CreateGreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_ReadAllGreets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllGreetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).ReadAllGreets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contextlogic.hello_service.v1alpha1.Greeter/ReadAllGreets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).ReadAllGreets(ctx, req.(*ReadAllGreetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_ReadGreet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadGreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).ReadGreet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contextlogic.hello_service.v1alpha1.Greeter/ReadGreet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).ReadGreet(ctx, req.(*ReadGreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_UpdateGreet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).UpdateGreet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contextlogic.hello_service.v1alpha1.Greeter/UpdateGreet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).UpdateGreet(ctx, req.(*UpdateGreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_DeleteGreet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGreetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).DeleteGreet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contextlogic.hello_service.v1alpha1.Greeter/DeleteGreet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).DeleteGreet(ctx, req.(*DeleteGreetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contextlogic.hello_service.v1alpha1.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGreet",
			Handler:    _Greeter_CreateGreet_Handler,
		},
		{
			MethodName: "ReadAllGreets",
			Handler:    _Greeter_ReadAllGreets_Handler,
		},
		{
			MethodName: "ReadGreet",
			Handler:    _Greeter_ReadGreet_Handler,
		},
		{
			MethodName: "UpdateGreet",
			Handler:    _Greeter_UpdateGreet_Handler,
		},
		{
			MethodName: "DeleteGreet",
			Handler:    _Greeter_DeleteGreet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "contextlogic/hello_service/v1alpha1/greeter.proto",
}
